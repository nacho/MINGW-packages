diff --git a/src/global.c b/src/global.c
index 3f20bfd..ffa14f2 100644
--- a/src/global.c
+++ b/src/global.c
@@ -106,10 +106,16 @@ static void init_ssl(void)
 	 * to speak TLSv1 to perform the encryption itself.
 	 */
 	git__ssl_ctx = SSL_CTX_new(SSLv23_method());
+	if (git__ssl_ctx == NULL) {
+		fprintf(stderr, "Failed to create ssl context: %s\n",
+                        ERR_error_string(ERR_get_error(), NULL));
+	}
 	SSL_CTX_set_options(git__ssl_ctx, ssl_opts);
 	SSL_CTX_set_mode(git__ssl_ctx, SSL_MODE_AUTO_RETRY);
 	SSL_CTX_set_verify(git__ssl_ctx, SSL_VERIFY_NONE, NULL);
 	if (!SSL_CTX_set_default_verify_paths(git__ssl_ctx)) {
+		fprintf(stderr, "could not set default verify paths: %s\n",
+                        ERR_error_string(ERR_get_error(), NULL));
 		SSL_CTX_free(git__ssl_ctx);
 		git__ssl_ctx = NULL;
 	}
diff --git a/src/openssl_stream.c b/src/openssl_stream.c
index 16ee783..1c01c96 100644
--- a/src/openssl_stream.c
+++ b/src/openssl_stream.c
@@ -434,6 +434,8 @@ int git_openssl_stream_new(git_stream **out, const char *host, const char *port)
 	st = git__calloc(1, sizeof(openssl_stream));
 	GITERR_CHECK_ALLOC(st);
 
+	fprintf(stderr, "stream_new\n");
+
 #ifdef GIT_CURL
 	error = git_curl_stream_new(&st->io, host, port);
 #else
